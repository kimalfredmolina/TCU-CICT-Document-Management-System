@page
@model Document_Management_System.Pages.AdminPage.AdminFilesModel
@{
    ViewData["Title"] = "Admin Files";
    Layout = "_LayoutDashboard";
}
<!-- Bootstrap CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<!-- Font Awesome Icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<!-- Bootstrap Table CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-table@1.24.1/dist/bootstrap-table.min.css">
<style>
    /* Custom styles */
    .select, #locale {
        width: 100%;
    }

    .like {
        margin-right: 10px;
    }
    /* Table header background color */
    .fixed-table-container thead th {
        background-color: #f0f0f0;
    }
    /* Table border */
    .table-bordered td, .table-bordered th {
        border: 1px solid #dee2e6;
    }
    /* Pagination style */
    .pagination {
        justify-content: flex-end;
    }
    /* Search box style */
    .search input {
        border: 1px solid #28a745;
    }
    /* Action buttons */
    .share-btn {
        color: #28a745;
    }

    .edit-btn {
        color: #007bff;
    }

    .delete-btn {
        color: #dc3545;
    }
    /* Full height container */
    .full-height {
        height: 100vh;
        display: flex;
        flex-direction: column;
    }
    /* Full height for the table container */
    .table-container {
        flex: 1;
        overflow: auto;
    }
    /* Preview section styles */
    #previewSection {
        border: 1px solid #ccc;
        padding: 10px;
        height: 300px;
        overflow-y: auto;
    }

    #uploadFile {
        margin-bottom: 10px;
    }

    #previewContainer p {
        text-align: center;
        font-style: italic;
        color: #666;
    }
</style>
<div class="container-fluid full-height">
    <h2 class="text-center">Document List</h2>
    <div class="row table-container">
        <div class="col-md-12">
            <div id="toolbar">
                <button id="remove" class="btn btn-danger" disabled>
                    <i class="fa fa-trash"></i> Delete
                </button>
            </div>
            <table id="table"
                   data-toolbar="#toolbar"
                   data-search="true"
                   data-show-refresh="true"
                   data-show-toggle="true"
                   data-show-fullscreen="true"
                   data-show-columns="true"
                   data-show-columns-toggle-all="true"
                   data-detail-view="true"
                   data-show-export="true"
                   data-click-to-select="true"
                   data-minimum-count-columns="2"
                   data-show-pagination-switch="true"
                   data-pagination="true"
                   data-id-field="id"
                   data-page-list="[10, 25, 50, 100, all]"
                   data-side-pagination="server"
                   data-url="https://examples.wenzhixin.net.cn/examples/bootstrap_table/data"
                   data-response-handler="responseHandler">
            </table>
        </div>
    </div>
</div>
<!-- Share Modal -->
<div class="modal fade" id="shareModal" tabindex="-1" aria-labelledby="shareModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="shareModalLabel">Share Document</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="mb-3">
                        <label for="shareEmail" class="form-label">Recipient Email</label>
                        <input type="email" class="form-control" id="shareEmail" placeholder="Enter recipient email">
                    </div>
                    <div class="mb-3">
                        <label for="shareMessage" class="form-label">Message (Optional)</label>
                        <textarea class="form-control" id="shareMessage" rows="3" placeholder="Add a message..."></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-success">Share</button>
            </div>
        </div>
    </div>
</div>
<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Edit Document</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editForm">
                    <div class="mb-3">
                        <label for="editName" class="form-label">Name</label>
                        <input type="text" class="form-control" id="editName" placeholder="Enter document name">
                    </div>
                    <div class="mb-3">
                        <label for="editCategories" class="form-label">Categories</label>
                        <input type="text" class="form-control" id="editCategories" placeholder="Enter categories">
                    </div>
                    <div class="mb-3">
                        <label for="editContentType" class="form-label">Content Type</label>
                        <input type="text" class="form-control" id="editContentType" placeholder="Enter content type">
                    </div>
                    <div class="mb-3">
                        <label for="uploadFile" class="form-label">Upload Document/PNG / PDF / DOC Files</label>
                        <input type="file" class="form-control" id="uploadFile" accept=".doc,.docx,.pdf,.png">
                    </div>
                    <!-- Preview Section -->
                    <div id="previewSection" class="mt-3">
                        <h5>Preview:</h5>
                        <div id="previewContainer" style="border: 1px solid #ccc; padding: 10px; height: 300px; overflow-y: auto;">
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveChangesBtn">Save Changes</button>
            </div>
        </div>
    </div>
</div>
<!-- View Modal -->
<div class="modal fade" id="viewModal" tabindex="-1" aria-labelledby="viewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="viewModalLabel">View Document</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="mb-3">
                        <label for="fileName" class="form-label">File Name</label>
                        <input type="text" class="form-control" id="fileName" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="fileSize" class="form-label">File Size</label>
                        <input type="text" class="form-control" id="fileSize" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="fileCategory" class="form-label">File Category</label>
                        <input type="text" class="form-control" id="fileCategory" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="uploadedBy" class="form-label">Uploaded By</label>
                        <input type="text" class="form-control" id="uploadedBy" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="uploadedDate" class="form-label">Uploaded Date</label>
                        <input type="text" class="form-control" id="uploadedDate" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="description" class="form-label">Description</label>
                        <textarea class="form-control" id="description" rows="3" readonly></textarea>
                    </div>
                </form>
                <!-- Document Preview -->
                <div class="mt-3">
                    <h5>Document Preview:</h5>
                    <div id="documentPreview" style="border: 1px solid #ccc; padding: 10px; height: 400px; overflow-y: auto;"></div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="editFileBtn"><i class="fa fa-edit"></i> Edit File</button>
            </div>
        </div>
    </div>
</div>
<!-- Scripts -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap-table@1.24.1/dist/bootstrap-table.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap-table@1.24.1/dist/extensions/locale/bootstrap-table-locale-all.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/tableexport.jquery.plugin@1.29.0/tableExport.min.js"></script>
<script>
    const $table = $('#table');
    const $remove = $('#remove');
    let selections = [];
    // Function to get selected IDs
    function getIdSelections() {
        return $.map($table.bootstrapTable('getSelections'), function (row) {
            return row.id;
        });
    }
    // Response handler for server-side data
    window.responseHandler = res => {
        $.each(res.rows, function (i, row) {
            row.state = $.inArray(row.id, selections) !== -1;
        });
        return res;
    };
    // Detail formatter for expanded rows
    window.detailFormatter = (index, row) => {
        const html = [];
        $.each(row, function (key, value) {
            html.push(`<p><b>${key}:</b> ${value}</p>`);
        });
        return html.join('');
    };
    // Formatter for action buttons
    function operateFormatter(value, row, index) {
        return [
            '<a class="share-btn" href="javascript:void(0)" title="Share">',
            '<i class="fa fa-share-alt"></i>',
            '</a> ',
            '<a class="edit-btn" href="javascript:void(0)" title="Edit">',
            '<i class="fa fa-edit"></i>',
            '</a> ',
            '<a class="view-btn" href="javascript:void(0)" title="View">',
            '<i class="fa fa-eye"></i>',
            '</a> ',
            '<a class="delete-btn" href="javascript:void(0)" title="Delete">',
            '<i class="fa fa-trash"></i>',
            '</a>'
        ].join('');
    }
    // Events for action buttons
    window.operateEvents = {
        'click .share-btn': function (e, value, row) {
            $('#shareModal').modal('show');
        },
        'click .edit-btn': function (e, value, row) {
            $('#editName').val(row.name);
            $('#editCategories').val(row.categories);
            $('#editContentType').val(row.content_type);
            $('#editModal').modal('show');
        },
        'click .view-btn': function (e, value, row) {
            $('#fileName').val(row.file_name || 'N/A');
            $('#fileSize').val(`${(row.file_size / 1024).toFixed(2)} MB` || 'N/A');
            $('#fileCategory').val(row.file_category || 'N/A');
            $('#uploadedBy').val(row.uploaded_by || 'N/A');
            $('#uploadedDate').val(row.uploaded_date || 'N/A');
            $('#description').val(row.description || 'N/A');
            // Clear previous preview
            $('#documentPreview').empty();
            // Display document preview based on file type
            if (row.file_type === 'application/pdf') {
                const pdfViewer = document.createElement('iframe');
                pdfViewer.src = `/uploads/${row.file_name}`; // Replace with actual file URL
                pdfViewer.style.width = '100%';
                pdfViewer.style.height = '100%';
                $('#documentPreview').append(pdfViewer);
            } else if (row.file_type.startsWith('image/')) {
                const imgPreview = document.createElement('img');
                imgPreview.src = `/uploads/${row.file_name}`; // Replace with actual file URL
                imgPreview.style.maxWidth = '100%';
                imgPreview.style.maxHeight = '100%';
                $('#documentPreview').append(imgPreview);
            } else if (row.file_type.startsWith('application/')) {
                const placeholder = document.createElement('p');
                placeholder.textContent = 'Word document preview is not available. Please download to view.';
                $('#documentPreview').append(placeholder);
            }
            $('#viewModal').modal('show');
        },
        'click .delete-btn': function (e, value, row) {
            $table.bootstrapTable('remove', {
                field: 'id',
                values: [row.id]
            });
        }
    };
    // Initialize the table
    function initTable() {
        $table.bootstrapTable('destroy').bootstrapTable({
            height: $(window).height() - $('h2').outerHeight(true) - $('#toolbar').outerHeight(true) - 30,
            locale: $('#locale').val(),
            columns: [
                [
                    {
                        field: 'state',
                        checkbox: true,
                        align: 'center',
                        valign: 'middle'
                    },
                    {
                        field: 'id',
                        title: 'ID',
                        sortable: true,
                        align: 'center'
                    },
                    {
                        field: 'name',
                        title: 'Name',
                        sortable: true,
                        align: 'left'
                    },
                    {
                        field: 'categories',
                        title: 'Categories',
                        sortable: true,
                        align: 'left'
                    },
                    {
                        field: 'content_type',
                        title: 'Content Type',
                        sortable: true,
                        align: 'left'
                    },
                    {
                        field: 'size_kb',
                        title: 'Size(KB)',
                        sortable: true,
                        align: 'right'
                    },
                    {
                        field: 'assign',
                        title: 'Assign',
                        sortable: true,
                        align: 'left'
                    },
                    {
                        field: 'status',
                        title: 'Status',
                        sortable: true,
                        align: 'left'
                    },
                    {
                        field: 'created_date',
                        title: 'Created Date',
                        sortable: true,
                        align: 'left'
                    },
                    {
                        field: 'operate',
                        title: 'Action',
                        events: window.operateEvents,
                        formatter: operateFormatter,
                        align: 'center'
                    }
                ]
            ]
        });
        // Enable/disable delete button based on selection
        $table.on('check.bs.table uncheck.bs.table check-all.bs.table uncheck-all.bs.table', function () {
            $remove.prop('disabled', !$table.bootstrapTable('getSelections').length);
            selections = getIdSelections();
        });
        // Handle remove button click
        $remove.click(function () {
            const ids = getIdSelections();
            $table.bootstrapTable('remove', {
                field: 'id',
                values: ids
            });
            $remove.prop('disabled', true);
        });
    }
    $(function () {
        initTable();
        $('#locale').change(initTable);
        // Event listener for file upload in Edit Modal
        document.getElementById('uploadFile').addEventListener('change', function () {
            const file = this.files[0];
            if (!file) return;
            // Validate file type
            const allowedTypes = ['application/pdf', 'image/png', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];
            if (!allowedTypes.includes(file.type)) {
                alert('Invalid file type. Only .doc, .docx, .pdf, and .png files are allowed.');
                return;
            }
            // Clear previous preview
            document.getElementById('previewContainer').innerHTML = '';
            // Display preview based on file type
            if (file.type === 'application/pdf') {
                const pdfViewer = document.createElement('iframe');
                pdfViewer.src = URL.createObjectURL(file);
                pdfViewer.style.width = '100%';
                pdfViewer.style.height = '100%';
                document.getElementById('previewContainer').appendChild(pdfViewer);
            } else if (file.type.startsWith('image/')) {
                const imgPreview = document.createElement('img');
                imgPreview.src = URL.createObjectURL(file);
                imgPreview.style.maxWidth = '100%';
                imgPreview.style.maxHeight = '100%';
                document.getElementById('previewContainer').appendChild(imgPreview);
            } else if (file.type.startsWith('application/')) {
                const wordPlaceholder = document.createElement('p');
                wordPlaceholder.textContent = 'Word document preview is not available. Please download to view.';
                document.getElementById('previewContainer').appendChild(wordPlaceholder);
            }
        });
        // Save changes button click handler in Edit Modal
        document.getElementById('saveChangesBtn').addEventListener('click', function () {
            const name = document.getElementById('editName').value;
            const categories = document.getElementById('editCategories').value;
            const contentType = document.getElementById('editContentType').value;
            const fileInput = document.getElementById('uploadFile');
            if (!name || !categories || !contentType || !fileInput.files[0]) {
                alert('Please fill out all fields and upload a file.');
                return;
            }
            // Simulate saving changes (replace with actual API call)
            console.log('Saving changes...');
            console.log({
                name,
                categories,
                contentType,
                file: fileInput.files[0].name
            });
            // Close the modal
            $('#editModal').modal('hide');
        });
        // Handle the "Edit File" button in View Modal
        $('#editFileBtn').on('click', function () {
            $('#viewModal').modal('hide');
            $('#editModal').modal('show');
        });
    });
</script>