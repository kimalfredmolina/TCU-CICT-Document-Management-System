@page
@model Document_Management_System.Pages.AdminPage.AdminFileFolderModel
@{
    ViewData["Title"] = "File Explorer";
    Layout = "_LayoutDashboard";
}
<!-- Bootstrap CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<!-- Font Awesome Icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<style>
    /* File Explorer Styles */
    .file-explorer {
        border: 1px solid #ddd;
        border-radius: 4px;
        overflow: hidden;
        height: calc(100vh - 180px);
        display: flex;
        flex-direction: column;
    }

    .explorer-header {
        background-color: #f8f9fa;
        padding: 10px 15px;
        border-bottom: 1px solid #ddd;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .breadcrumb {
        background-color: transparent;
        padding: 0;
        margin: 0;
        display: flex;
        flex-wrap: wrap;
        font-size: 14px;
    }

    .breadcrumb-item + .breadcrumb-item::before {
        content: ">";
    }

    .explorer-toolbar {
        background-color: #f8f9fa;
        padding: 8px 15px;
        border-bottom: 1px solid #ddd;
        display: flex;
        gap: 10px;
    }

    .explorer-content {
        flex-grow: 1;
        overflow-y: auto;
        padding: 0;
        background-color: #fff;
    }

    .file-list {
        width: 100%;
        border-collapse: collapse;
    }

        .file-list th {
            position: sticky;
            top: 0;
            background-color: #f8f9fa;
            padding: 8px 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
            font-weight: 500;
        }

        .file-list td {
            padding: 8px 15px;
            border-bottom: 1px solid #f3f3f3;
        }

        .file-list tr:hover {
            background-color: #f5f5f5;
        }

    .file-icon {
        width: 20px;
        text-align: center;
        margin-right: 10px;
        color: #ffc107;
    }

    .folder-icon {
        color: #2196F3;
    }

    .file-name {
        display: flex;
        align-items: center;
        cursor: pointer;
    }

    .file-actions {
        visibility: hidden;
    }

    .file-list tr:hover .file-actions {
        visibility: visible;
    }

    .action-btn {
        background: none;
        border: none;
        color: #6c757d;
        cursor: pointer;
        padding: 2px 5px;
        font-size: 14px;
    }

        .action-btn:hover {
            color: #007bff;
        }

    .add-folder-btn {
        color: #28a745;
    }

    /* Enhanced Tree View Styles */
    .toggle-icon {
        display: inline-block;
        width: 16px;
        text-align: center;
        margin-right: 5px;
        transition: transform 0.2s ease;
    }

        .toggle-icon.open i {
            transform: rotate(90deg);
        }

    .nested-folder {
        display: none;
    }

        .nested-folder.show {
            display: table-row;
        }

    .level-0 td:first-child {
        padding-left: 15px;
    }

    .level-1 td:first-child {
        padding-left: 35px;
    }

    .level-2 td:first-child {
        padding-left: 55px;
    }

    .level-3 td:first-child {
        padding-left: 75px;
    }

    .file-spacer {
        width: 16px;
        display: inline-block;
        margin-right: 5px;
    }

    /* Folder expandable area */
    .folder-children {
        display: none;
    }

        .folder-children.show {
            display: table-row;
        }

    /* New dropdown styles */
    .folder-dropdown {
        position: relative;
    }

    .subfolder-container {
        display: none;
        width: 100%;
    }

        .subfolder-container.open {
            display: block;
        }

    .subfolder-row {
        background-color: #f9f9f9;
    }

        .subfolder-row td {
            padding-left: 40px !important;
        }

        .subfolder-row .subfolder-row td {
            padding-left: 65px !important;
        }

        .subfolder-row .subfolder-row .subfolder-row td {
            padding-left: 90px !important;
        }

    .caret-icon {
        transition: transform 0.3s;
    }

        .caret-icon.open {
            transform: rotate(90deg);
        }

    .delete-spinner {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
    }

    .delete-spinner-content {
        background-color: white;
        padding: 20px;
        border-radius: 5px;
        display: flex;
        align-items: center;
    }

    .delete-spinner-text {
        margin-left: 10px;
        font-weight: bold;
    }
    /* No access message */
    .no-access-message {
        padding: 20px;
        text-align: center;
        color: #6c757d;
    }
    /* Toast notification styles */
    .toast-container {
        position: fixed;
        bottom: 20px;
        right: 20px;
        z-index: 9999;
    }

    .custom-toast {
        min-width: 250px;
        margin-bottom: 10px;
        padding: 15px;
        border-radius: 4px;
        box-shadow: 0 0 10px rgba(0,0,0,0.2);
        animation: fadeIn 0.5s, fadeOut 0.5s 4.5s;
    }

    .toast-success {
        background-color: #28a745;
        color: white;
    }

    .toast-error {
        background-color: #dc3545;
        color: white;
    }
</style>

<div class="dashboard-content">
    <h1>File Explorer</h1>
    @Html.AntiForgeryToken()
    <div class="file-explorer">
        <div class="explorer-header">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a asp-page="./AdminFileFolder">Home</a></li>
                    @if (!string.IsNullOrEmpty(Model.CurrentCategory))
                    {
                        <li class="breadcrumb-item"><a asp-page="./AdminFileFolder" asp-route-category="@Model.CurrentCategory">@Model.CurrentCategory</a></li>

                        @foreach (var folder in Model.BreadcrumbFolders)
                        {
                            <li class="breadcrumb-item"><a asp-page="./AdminFileFolder" asp-route-category="@Model.CurrentCategory" asp-route-folderPath="@folder.Path">@folder.Name</a></li>
                        }
                    }
                </ol>
            </nav>

            <div>
                <button id="refreshBtn" class="btn btn-sm btn-outline-primary">
                    <i class="fas fa-sync-alt"></i> Refresh
                </button>
            </div>
        </div>

        <div class="explorer-toolbar">

            <button type="button" class="btn btn-sm btn-outline-success" id="externalAddFolderBtn" data-toggle="modal" data-target="#addFolderModal">
                <i class="fas fa-folder-plus"></i> New Folder
            </button>

            <button type="button" class="btn btn-sm btn-outline-primary" id="externalUploadBtn" data-toggle="modal" data-target="#uploadFileModal">
                <i class="fas fa-upload"></i> Upload File
            </button>

        </div>

        <div class="explorer-content">
            @if (Model.AccessibleCategoryIds.Count == 0 && !Model.IsAdmin)
            {
                <div class="no-access-message">
                    <i class="fas fa-lock fa-3x mb-3"></i>
                    <h4>No Access</h4>
                    <p>You don't have access to any folders. Please contact an administrator.</p>
                </div>
            }
            else
            {
                <table class="file-list">
                    <thead>
                        <tr>
                            <th style="width: 40%">Name</th>
                            <th style="width: 15%">Date Modified</th>
                            <th style="width: 15%">Type</th>
                            <th style="width: 15%">Size</th>
                            <th style="width: 15%">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (string.IsNullOrEmpty(Model.CurrentCategory))
                        {
                            <!-- Root Level Categories -->
                            @foreach (var category in Model.FolderHierarchy.Keys)
                            {
                                <tr class="folder-item folder-dropdown" data-path="@category">
                                    <td class="file-name">
                                        <span class="toggle-icon"><i class="fas fa-chevron-right caret-icon"></i></span>
                                        <i class="fas fa-folder folder-icon file-icon"></i> @category
                                    </td>
                                    <td>@Model.GetCategoryLastModifiedDate(category).ToString("MM/dd/yyyy h:mm tt")</td>
                                    <td>File folder</td>
                                    <td>@Model.GetFileCount(category) items</td>
                                    <td class="file-actions">
                                        <a href="/AdminPage/AdminFilesTable?folderPath=@category&category=@category" class="action-btn" title="View Files">
                                            <i class="fas fa-file-alt"></i>
                                        </a>
                                        <button class="action-btn" title="Delete" onclick="deleteFolder('@category')">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </td>
                                </tr>
                                <!-- Category Subfolders -->
                                <tr class="subfolder-container" data-parent="@category">
                                    <td colspan="5" class="p-0">
                                        <table class="file-list w-100">
                                            @foreach (var areaFolder in Model.FolderHierarchy[category])
                                            {
                                                <tr class="subfolder-row folder-dropdown" data-path="@areaFolder.Path">
                                                    <td class="file-name">
                                                        <span class="toggle-icon"><i class="fas fa-chevron-right caret-icon"></i></span>
                                                        <i class="fas fa-folder folder-icon file-icon"></i> @areaFolder.Name
                                                    </td>
                                                    <td>@areaFolder.ModifiedDate.ToString("MM/dd/yyyy h:mm tt")</td>
                                                    <td>File folder</td>
                                                    <td>@areaFolder.ItemCount items</td>
                                                    <td class="file-actions">
                                                        <a href="/AdminPage/AdminFilesTable?folderPath=@areaFolder.Path&category=@areaFolder.Category" class="action-btn" title="View Files">
                                                            <i class="fas fa-file-alt"></i>
                                                        </a>
                                                        <button class="action-btn" title="Delete" onclick="deleteFolder('@areaFolder.Path')">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    </td>
                                                </tr>
                                                <!-- Area Subfolders (Courses) -->
                                                <tr class="subfolder-container" data-parent="@areaFolder.Path">
                                                    <td colspan="5" class="p-0">
                                                        <table class="file-list w-100">
                                                            @foreach (var courseFolder in areaFolder.SubFolders)
                                                            {
                                                                <tr class="subfolder-row subfolder-row folder-dropdown" data-path="@courseFolder.Path">
                                                                    <td class="file-name">
                                                                        <span class="toggle-icon"><i class="fas fa-chevron-right caret-icon"></i></span>
                                                                        <i class="fas fa-folder folder-icon file-icon"></i> @courseFolder.Name
                                                                    </td>
                                                                    <td>@courseFolder.ModifiedDate.ToString("MM/dd/yyyy h:mm tt")</td>
                                                                    <td>File folder</td>
                                                                    <td>@courseFolder.ItemCount items</td>
                                                                    <td class="file-actions">
                                                                        <a href="/AdminPage/AdminFilesTable?folderPath=@courseFolder.Path&category=@courseFolder.Category" class="action-btn" title="View Files">
                                                                            <i class="fas fa-file-alt"></i>
                                                                        </a>
                                                                        <button class="action-btn" title="Delete" onclick="deleteFolder('@courseFolder.Path')">
                                                                            <i class="fas fa-trash"></i>
                                                                        </button>
                                                                    </td>
                                                                </tr>
                                                                <!-- Course Subfolders (Years) -->
                                                                <tr class="subfolder-container" data-parent="@courseFolder.Path">
                                                                    <td colspan="5" class="p-0">
                                                                        <table class="file-list w-100">
                                                                            @foreach (var yearFolder in courseFolder.SubFolders)
                                                                            {
                                                                                <tr class="subfolder-row subfolder-row subfolder-row" data-path="@yearFolder.Path">
                                                                                    <td class="file-name">
                                                                                        <span class="file-spacer"></span>
                                                                                        <i class="fas fa-folder folder-icon file-icon"></i> @yearFolder.Name
                                                                                    </td>
                                                                                    <td>@yearFolder.ModifiedDate.ToString("MM/dd/yyyy h:mm tt")</td>
                                                                                    <td>File folder</td>
                                                                                    <td>@yearFolder.ItemCount items</td>
                                                                                    <td class="file-actions">
                                                                                        <a href="/AdminPage/AdminFilesTable?folderPath=@yearFolder.Path&category=@yearFolder.Category" class="action-btn" title="View Files">
                                                                                            <i class="fas fa-file-alt"></i>
                                                                                        </a>
                                                                                        <button class="action-btn" title="Delete" onclick="deleteFolder('@yearFolder.Path')">
                                                                                            <i class="fas fa-trash"></i>
                                                                                        </button>
                                                                                    </td>
                                                                                </tr>
                                                                            }
                                                                            <!-- Add Year button at the course level -->
                                                                            <tr class="add-year-row" data-course-path="@courseFolder.Path" data-category="@category" data-area-path="@areaFolder.Path">
                                                                                <td class="file-name add-folder-btn">
                                                                                    <i class="fas fa-folder-plus file-icon"></i> Add Year
                                                                                </td>
                                                                                <td>Action</td>
                                                                                <td></td>
                                                                                <td></td>
                                                                            </tr>
                                                                        </table>
                                                                    </td>
                                                                </tr>
                                                            }
                                                            <!-- Add Course button at the area level -->
                                                            <tr class="add-course-row" data-area-path="@areaFolder.Path" data-category="@category">
                                                                <td class="file-name add-folder-btn">
                                                                    <i class="fas fa-folder-plus file-icon"></i> Add Course
                                                                </td>
                                                                <td>@DateTime.Now.ToString("MM/dd/yyyy h:mm tt")</td>
                                                                <td>Action</td>
                                                                <td></td>
                                                                <td></td>
                                                            </tr>
                                                        </table>
                                                    </td>
                                                </tr>
                                            }

                                            <!-- Add Area button at the category level -->
                                            <tr class="add-area-row" data-category="@category">
                                                <td class="file-name add-folder-btn">
                                                    <i class="fas fa-folder-plus file-icon"></i> Add Area
                                                </td>
                                                <td>@DateTime.Now.ToString("MM/dd/yyyy h:mm tt")</td>
                                                <td>Action</td>
                                                <td></td>
                                                <td></td>
                                            </tr>
                                        </table>
                                    </td>
                                </tr>
                            }

                            @if (User.IsInRole("Admin"))
                            {
                                <tr class="add-category-row">
                                    <td class="file-name add-folder-btn" id="externalAddCategoriesBtn" data-toggle="modal" data-target="#addCategoryModal">
                                        <i class="fas fa-folder-plus file-icon"></i> Add Category
                                    </td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                </tr>
                            }

                        }
                        else
                        {
                            <!-- If inside a category or folder, show folders and files -->
                            @foreach (var folder in Model.CurrentFolders)
                            {
                                <tr class="folder-item" data-path="@folder.Path">
                                    <td class="file-name">
                                        <span class="toggle-icon"><i class="fas fa-chevron-right"></i></span>
                                        <i class="fas fa-folder folder-icon file-icon"></i> @folder.Name
                                    </td>
                                    <td>@folder.ModifiedDate.ToString("MM/dd/yyyy h:mm tt")</td>
                                    <td>File folder</td>
                                    <td>@folder.ItemCount items</td>
                                    <td class="file-actions">
                                        <button class="action-btn" title="Delete" onclick="deleteFolder('@folder.Path')">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </td>
                                </tr>
                            }



                            @foreach (var file in Model.CurrentFiles)
                            {
                                <tr class="file-item">
                                    <td class="file-name">
                                        <span class="file-spacer"></span>
                                        <i class="@file.GetFileIcon() file-icon"></i> @file.Name
                                    </td>
                                    <td>@file.DateModified.ToString("MM/dd/yyyy h:mm tt")</td>
                                    <td>@file.Type</td>
                                    <td>@file.Size</td>
                                    <td class="file-actions">
                                        <a href="@file.DownloadUrl" class="action-btn" title="Download">
                                            <i class="fas fa-download"></i>
                                        </a>
                                        <button class="action-btn" title="Delete" onclick="deleteFile('@file.Id')">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            }
            
        </div>
        <!-- categories Modal -->
        <div class="modal fade" id="addCategoriesModal" tabindex="-1" aria-labelledby="addCategoriesModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addCategoriesModalLabel">Add New Category</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="addCategoryForm" method="post" asp-page-handler="AddCategory">
                            <div class="mb-3">
                                <label for="categoryName">Category Name</label>
                                <input type="text" class="form-control" id="categoryName" name="categoryName" required
                                       minlength="2" maxlength="50" pattern="[a-zA-Z0-9\s\-_]+"
                                       title="Category name can only contain letters, numbers, spaces, hyphens, and underscores">
                                <div class="invalid-feedback" id="categoryNameFeedback"></div>
                                <small class="form-text text-muted">
                                    Category name must be 2-50 characters and contain only letters, numbers, spaces, hyphens, and underscores.
                                </small>
                            </div>

                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary" id="createCategoryBtn">
                                <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true" id="categorySpinner"></span>
                                Create Category
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <!-- Add Area Modal -->
        <div class="modal fade" id="addAreaModal" tabindex="-1" aria-labelledby="addAreaModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addAreaModalLabel">Add New Area</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="addAreaForm" method="post" asp-page-handler="AddArea">
                            <div class="mb-3">
                                <label for="areaName">Area Name</label>
                                <input type="text" class="form-control" id="areaName" name="areaName" required
                                       minlength="2" maxlength="50" pattern="[a-zA-Z0-9\s\-_]+"
                                       title="Area name can only contain letters, numbers, spaces, hyphens, and underscores">
                                <small class="form-text text-muted">
                                    Area name must be 2-50 characters and contain only letters, numbers, spaces, hyphens, and underscores.
                                </small>
                            </div>
                            <input type="hidden" name="categoryId" id="categoryIdForArea">
                            <input type="hidden" name="categoryName" id="categoryNameForArea">

                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary" id="createAreaBtn">
                                <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true" id="areaSpinner"></span>
                                Create Area
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <!-- Add Course Modal -->
        <div class="modal fade" id="addCourseModal" tabindex="-1" aria-labelledby="addCourseModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addCourseModalLabel">Add New Course</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="addCourseForm" method="post" asp-page-handler="AddCourse">
                            <div class="mb-3">
                                <label for="courseName">Course Name</label>
                                <input type="text" class="form-control" id="courseName" name="courseName" required
                                       minlength="2" maxlength="50" pattern="[a-zA-Z0-9\s\-_]+"
                                       title="Course name can only contain letters, numbers, spaces, hyphens, and underscores">
                                <small class="form-text text-muted">
                                    Course name must be 2-50 characters and contain only letters, numbers, spaces, hyphens, and underscores.
                                </small>
                            </div>
                            <input type="hidden" name="areaId" id="areaIdForCourse">
                            <input type="hidden" name="areaPath" id="areaPathForCourse">
                            <input type="hidden" name="categoryName" id="categoryNameForCourse">

                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary" id="createCourseBtn">
                                <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true" id="courseSpinner"></span>
                                Create Course
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <!-- Add Year Modal -->
        <div class="modal fade" id="addYearModal" tabindex="-1" aria-labelledby="addYearModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addYearModalLabel">Add New Year</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="addYearForm" method="post" asp-page-handler="AddYear">
                            <div class="mb-3">
                                <label for="yearName">Year</label>
                                <input type="number" class="form-control" id="yearName" name="year" required
                                       min="2000" max="2100" step="1"
                                       title="Please enter a valid year between 2000 and 2100">
                                <small class="form-text text-muted">
                                    Please enter a valid year between 2000 and 2100.
                                </small>
                            </div>
                            <input type="hidden" name="coursePath" id="coursePathForYear">
                            <input type="hidden" name="categoryName" id="categoryNameForYear">
                            <input type="hidden" name="areaPath" id="areaPathForYear">

                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary" id="createYearBtn">
                                <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true" id="yearSpinner"></span>
                                Create Year
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <!-- Add New Folder Modal -->
        <div class="modal fade" id="addFolderModal" tabindex="-1" aria-labelledby="addFolderModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addFolderModalLabel">Add New Folder</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form method="post" asp-page-handler="AddFolder">
                            <div class="mb-3">
                                <div class="form-group">
                                    <label for="folderName">Folder Name</label>
                                    <input type="text" class="form-control" id="folderName" name="folderName" required>
                                    <input type="hidden" name="category" value="@Model.CurrentCategory">
                                    <input type="hidden" name="currentPath" value="@Model.CurrentPath">
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                    <button type="submit" class="btn btn-primary">Create Folder</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <!-- Add Uploading Modal -->
        <div class="modal fade" id="UploadModal" tabindex="-1" aria-labelledby="UploadModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="uploadFileModalLabel">Upload File</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form method="post" enctype="multipart/form-data" asp-page-handler="UploadFile">
                            <div class="modal-body">
                                <div class="form-group">
                                    <label for="fileUpload">Select File</label>
                                    <input type="file" class="form-control-file" id="fileUpload" name="file" required>
                                    <input type="hidden" name="category" value="@Model.CurrentCategory">
                                    <input type="hidden" name="currentPath" value="@Model.CurrentPath">
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-primary">Upload</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <!-- Toast container for notifications -->
        <div class="toast-container"></div>
@section Scripts {
            <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
            <script>
                // Pass TempData messages to JavaScript
                var tempDataSuccessMessage = '@Html.Raw(Json.Serialize(TempData["SuccessMessage"]?.ToString()))';
                var tempDataErrorMessage = '@Html.Raw(Json.Serialize(TempData["ErrorMessage"]?.ToString()))';

                $(document).ready(function() {

                // Pass TempData messages to JavaScript
                var tempDataSuccessMessage = '@Html.Raw(Json.Serialize(TempData["SuccessMessage"]?.ToString()))';
                var tempDataErrorMessage = '@Html.Raw(Json.Serialize(TempData["ErrorMessage"]?.ToString()))';

                // Show toast notifications if TempData contains messages
                if (tempDataSuccessMessage && tempDataSuccessMessage !== 'null') {
                    showToast(tempDataSuccessMessage, 'success');
                }

                if (tempDataErrorMessage && tempDataErrorMessage !== 'null') {
                    showToast(tempDataErrorMessage, 'error');
                }
                    // Initialize Bootstrap 5 modals
                    var modals = {};
                    $('.modal').each(function() {
                        var modalId = $(this).attr('id');
                        try {
                            modals[modalId] = new bootstrap.Modal(document.getElementById(modalId));
                        } catch (error) {
                            console.error(`Error initializing modal ${modalId}:`, error);
                        }
                    });

                    // Refresh button handler
                    $('#refreshBtn').click(function() {
                        window.location.reload();
                    });

                    // Initialize: Hide all subfolder containers initially
                    $('.subfolder-container').hide();

                    // Use event delegation for all dynamic elements
                    $(document).on('click', '.folder-dropdown', function(e) {
                        // Only if not clicking on a button or link
                        if (!$(e.target).closest('button').length &&
                            !$(e.target).closest('a').length &&
                            !$(e.target).closest('.add-folder-btn').length) {

                            e.preventDefault();
                            e.stopPropagation();

                            // Toggle the icon
                            $(this).find('.caret-icon').toggleClass('open');

                            // Toggle subfolder visibility
                            const folderPath = $(this).data('path');
                            if (folderPath) {
                                const subfolderContainer = $(`tr.subfolder-container[data-parent="${folderPath}"]`);
                                subfolderContainer.toggle();
                            }
                        }
                    });

                    // Handle Add Area button clicks
                    $(document).on('click', '.add-area-row .add-folder-btn, .add-area-row .fa-folder-plus', function(e) {
                        e.preventDefault();
                        e.stopPropagation();

                        const row = $(this).closest('.add-area-row');
                        const categoryName = row.closest('table').closest('td').closest('tr').attr('data-parent');
                        showAddAreaModal(categoryName);
                    });

                    // Handle Add Course button clicks
                    $(document).on('click', '.add-course-row .add-folder-btn, .add-course-row .fa-folder-plus', function(e) {
                        e.preventDefault();
                        e.stopPropagation();

                        const row = $(this).closest('.add-course-row');
                        const areaPath = row.attr('data-area-path');
                        const categoryName = row.attr('data-category');
                        showAddCourseModal(areaPath, categoryName);
                    });

                    // Handle Add Year button clicks
                    $(document).on('click', '.add-year-row .add-folder-btn, .add-year-row .fa-folder-plus', function(e) {
                        e.preventDefault();
                        e.stopPropagation();

                        const row = $(this).closest('.add-year-row');
                        const coursePath = row.attr('data-course-path');
                        const categoryName = row.attr('data-category');
                        const areaPath = row.attr('data-area-path');
                        showAddYearModal(coursePath, categoryName, areaPath);
                    });

                    // Handle external button clicks
                    $('#externalAddCategoriesBtn').on('click', function() {
                        if (modals['addCategoriesModal']) {
                            modals['addCategoriesModal'].show();
                        }
                    });

                    $('#externalAddFolderBtn').on('click', function() {
                        if (modals['addFolderModal']) {
                            modals['addFolderModal'].show();
                        }
                    });

                    $('#externalUploadBtn').on('click', function() {
                        if (modals['UploadModal']) {
                            modals['UploadModal'].show();
                        }
                    });

                    // Form submissions
                    $('#addCategoryForm, #addAreaForm, #addCourseForm, #addYearForm').on('submit', function() {
                        const formId = $(this).attr('id');
                        const spinnerType = formId.replace('add', '').replace('Form', '').toLowerCase();

                        $(`#${spinnerType}Spinner`).removeClass('d-none');
                        $(`#create${spinnerType.charAt(0).toUpperCase() + spinnerType.slice(1)}Btn`).attr('disabled', true);

                        return true;
                    });

                    // Show toast notifications if TempData contains messages
                    if (tempDataSuccessMessage && tempDataSuccessMessage !== 'null') {
                        $('#successToastBody').text(tempDataSuccessMessage);
                        try {
                            $('#successToast').toast('show');
                        } catch (error) {
                            // Fallback
                            $('#successToast').addClass('show').css('display', 'block');
                            setTimeout(function() {
                                $('#successToast').removeClass('show').css('display', 'none');
                            }, 5000);
                        }
                    }

                    if (tempDataErrorMessage && tempDataErrorMessage !== 'null') {
                        $('#errorToastBody').text(tempDataErrorMessage);
                        try {
                            $('#errorToast').toast('show');
                        } catch (error) {
                            // Fallback
                            $('#errorToast').addClass('show').css('display', 'block');
                            setTimeout(function() {
                                $('#errorToast').removeClass('show').css('display', 'none');
                            }, 5000);
                        }
                    }
                });

                // Function to show the Add Area modal
                function showAddAreaModal(category) {
                    if (!category) {
                        console.error('Category name is undefined');
                        return;
                    }

                    $('#categoryNameForArea').val(category);

                    try {
                        var modal = new bootstrap.Modal(document.getElementById('addAreaModal'));
                        modal.show();
                    } catch (error) {
                        // Fallback
                        $('#addAreaModal').addClass('show').css({
                            'display': 'block',
                            'background-color': 'rgba(0,0,0,0.5)'
                        });
                        $('body').addClass('modal-open');
                    }
                }

                // Function to show the Add Course modal
                function showAddCourseModal(areaPath, categoryName) {
                    if (!areaPath || !categoryName) {
                        console.error('Area path or category name is undefined');
                        return;
                    }

                    $('#areaPathForCourse').val(areaPath);
                    $('#categoryNameForCourse').val(categoryName);

                    try {
                        var modal = new bootstrap.Modal(document.getElementById('addCourseModal'));
                        modal.show();
                    } catch (error) {
                        // Fallback
                        $('#addCourseModal').addClass('show').css({
                            'display': 'block',
                            'background-color': 'rgba(0,0,0,0.5)'
                        });
                        $('body').addClass('modal-open');
                    }
                }

                // Function to show the Add Year modal
                function showAddYearModal(coursePath, categoryName, areaPath) {
                    if (!coursePath || !categoryName || !areaPath) {
                        console.error('Course path, category name, or area path is undefined');
                        return;
                    }

                    $('#coursePathForYear').val(coursePath);
                    $('#categoryNameForYear').val(categoryName);
                    $('#areaPathForYear').val(areaPath);

                    try {
                        var modal = new bootstrap.Modal(document.getElementById('addYearModal'));
                        modal.show();
                    } catch (error) {
                        // Fallback
                        $('#addYearModal').addClass('show').css({
                            'display': 'block',
                            'background-color': 'rgba(0,0,0,0.5)'
                        });
                        $('body').addClass('modal-open');
                    }
                }

                // Function to delete a folder
                function deleteFolder(folderPath) {
                    if (!folderPath) {
                        console.error('Folder path is undefined');
                        return;
                    }

                    if (confirm('Are you sure you want to delete this folder and all its contents?')) {
                        fetch('/AdminPage/AdminFileFolder?handler=DeleteFolder', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/x-www-form-urlencoded',
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                            },
                            body: `folderPath=${encodeURIComponent(folderPath)}`
                        }).then(response => {
                            if (response.ok) {
                                window.location.reload();
                            } else {
                                alert('Error deleting folder. Make sure it is empty or try again later.');
                            }
                        }).catch(error => {
                            console.error('Error deleting folder:', error);
                            alert('Error deleting folder. Please try again later.');
                        });
                    }
                }

                // Function to delete a file
                function deleteFile(fileId) {
                    if (!fileId) {
                        console.error('File ID is undefined');
                        return;
                    }

                    if (confirm('Are you sure you want to delete this file?')) {
                        fetch('/AdminPage/AdminFileFolder?handler=DeleteFile', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/x-www-form-urlencoded',
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                            },
                            body: `fileId=${encodeURIComponent(fileId)}`
                        }).then(response => {
                            if (response.ok) {
                                window.location.reload();
                            } else {
                                alert('Error deleting file');
                            }
                        }).catch(error => {
                            console.error('Error deleting file:', error);
                            alert('Error deleting file. Please try again later.');
                        });
                    }
                }

                // Fix for navigateToFolder function
                function navigateToFolder(folderPath) {
                    if (!folderPath) {
                        console.error('Folder path is undefined');
                        return;
                    }

                    const pathParts = folderPath.split('/');
                    if (pathParts.length > 0) {
                        const category = pathParts[0];
                        window.location.href = `/AdminPage/AdminFileFolder?category=${encodeURIComponent(category)}&folderPath=${encodeURIComponent(folderPath)}`;
                    } else {
                        console.error('Invalid folder path format');
                    }
                }
                                // Add this to the document.ready function in the Scripts section
                // Show toast notifications if TempData contains messages
                if (tempDataSuccessMessage && tempDataSuccessMessage !== 'null') {
                    showToast(tempDataSuccessMessage, 'success');
                }

                if (tempDataErrorMessage && tempDataErrorMessage !== 'null') {
                    showToast(tempDataErrorMessage, 'error');
                }

                // Function to show toast notifications
                function showToast(message, type) {
                    const toast = document.createElement('div');
                    toast.className = `toast show position-fixed bottom-0 end-0 m-3 ${type === 'success' ? 'bg-success' : 'bg-danger'} text-white`;
                    toast.style.zIndex = '9999';
                    toast.innerHTML = `
                        <div class="toast-header">
                            <strong class="me-auto">${type === 'success' ? 'Success' : 'Error'}</strong>
                            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                        <div class="toast-body">
                            ${message}
                        </div>
                    `;
                    document.body.appendChild(toast);

                    // Auto-hide after 5 seconds
                    setTimeout(() => {
                        toast.classList.remove('show');
                        setTimeout(() => {
                            document.body.removeChild(toast);
                        }, 300);
                    }, 5000);
                }
                // Function to show toast notifications
                function showToast(message, type) {
                    const toastContainer = document.querySelector('.toast-container');
                    const toast = document.createElement('div');
                    toast.className = `custom-toast ${type === 'success' ? 'toast-success' : 'toast-error'}`;
                    toast.innerHTML = `
                        <div class="d-flex align-items-center">
                            <i class="fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle'} me-2"></i>
                            <div>${message}</div>
                        </div>
                        <button type="button" class="btn-close btn-close-white ms-auto" onclick="this.parentElement.remove()"></button>
                    `;
                    toastContainer.appendChild(toast);

                    // Auto-hide after 5 seconds
                    setTimeout(() => {
                        toast.style.opacity = '0';
                        setTimeout(() => {
                            toast.remove();
                        }, 500);
                    }, 5000);
                }

            </script>
}