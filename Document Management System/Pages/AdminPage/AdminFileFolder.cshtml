@page
@model Document_Management_System.Pages.AdminPage.AdminFileFolderModel
@{
    ViewData["Title"] = "File Explorer";
    Layout = "_LayoutDashboard";
}

<style>
    /* File Explorer Styles */
    .file-explorer {
        border: 1px solid #ddd;
        border-radius: 4px;
        overflow: hidden;
        height: calc(100vh - 180px);
        display: flex;
        flex-direction: column;
    }

    .explorer-header {
        background-color: #f8f9fa;
        padding: 10px 15px;
        border-bottom: 1px solid #ddd;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .breadcrumb {
        background-color: transparent;
        padding: 0;
        margin: 0;
        display: flex;
        flex-wrap: wrap;
        font-size: 14px;
    }

    .breadcrumb-item + .breadcrumb-item::before {
        content: ">";
    }

    .explorer-toolbar {
        background-color: #f8f9fa;
        padding: 8px 15px;
        border-bottom: 1px solid #ddd;
        display: flex;
        gap: 10px;
    }

    .explorer-content {
        flex-grow: 1;
        overflow-y: auto;
        padding: 0;
        background-color: #fff;
    }

    .file-list {
        width: 100%;
        border-collapse: collapse;
    }

        .file-list th {
            position: sticky;
            top: 0;
            background-color: #f8f9fa;
            padding: 8px 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
            font-weight: 500;
        }

        .file-list td {
            padding: 8px 15px;
            border-bottom: 1px solid #f3f3f3;
        }

        .file-list tr:hover {
            background-color: #f5f5f5;
        }

    .file-icon {
        width: 20px;
        text-align: center;
        margin-right: 10px;
        color: #ffc107;
    }

    .folder-icon {
        color: #2196F3;
    }

    .file-name {
        display: flex;
        align-items: center;
        cursor: pointer;
    }

    .file-actions {
        visibility: hidden;
    }

    .file-list tr:hover .file-actions {
        visibility: visible;
    }

    .action-btn {
        background: none;
        border: none;
        color: #6c757d;
        cursor: pointer;
        padding: 2px 5px;
        font-size: 14px;
    }

        .action-btn:hover {
            color: #007bff;
        }

    .add-folder-btn {
        color: #28a745;
    }

    /* Enhanced Tree View Styles */
    .toggle-icon {
        display: inline-block;
        width: 16px;
        text-align: center;
        margin-right: 5px;
        transition: transform 0.2s ease;
    }

        .toggle-icon.open i {
            transform: rotate(90deg);
        }

    .nested-folder {
        display: none;
    }

        .nested-folder.show {
            display: table-row;
        }

    .level-0 td:first-child {
        padding-left: 15px;
    }

    .level-1 td:first-child {
        padding-left: 35px;
    }

    .level-2 td:first-child {
        padding-left: 55px;
    }

    .level-3 td:first-child {
        padding-left: 75px;
    }

    .file-spacer {
        width: 16px;
        display: inline-block;
        margin-right: 5px;
    }

    /* Folder expandable area */
    .folder-children {
        display: none;
    }

        .folder-children.show {
            display: table-row;
        }

    /* New dropdown styles */
    .folder-dropdown {
        position: relative;
    }

    .subfolder-container {
        display: none;
        width: 100%;
    }

        .subfolder-container.open {
            display: block;
        }

    .subfolder-row {
        background-color: #f9f9f9;
    }

        .subfolder-row td {
            padding-left: 40px !important;
        }

        .subfolder-row .subfolder-row td {
            padding-left: 65px !important;
        }

        .subfolder-row .subfolder-row .subfolder-row td {
            padding-left: 90px !important;
        }

    .caret-icon {
        transition: transform 0.3s;
    }

        .caret-icon.open {
            transform: rotate(90deg);
        }
</style>

<div class="dashboard-content">
    <h1>File Explorer</h1>
    <div class="file-explorer">
        <div class="explorer-header">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a asp-page="./AdminFileFolder">Home</a></li>
                    @if (!string.IsNullOrEmpty(Model.CurrentCategory))
                    {
                        <li class="breadcrumb-item"><a asp-page="./AdminFileFolder" asp-route-category="@Model.CurrentCategory">@Model.CurrentCategory</a></li>

                        @foreach (var folder in Model.BreadcrumbFolders)
                        {
                            <li class="breadcrumb-item"><a asp-page="./AdminFileFolder" asp-route-category="@Model.CurrentCategory" asp-route-folderPath="@folder.Path">@folder.Name</a></li>
                        }
                    }
                </ol>
            </nav>

            <div>
                <button id="refreshBtn" class="btn btn-sm btn-outline-primary">
                    <i class="fas fa-sync-alt"></i> Refresh
                </button>
            </div>
        </div>

        <div class="explorer-toolbar">
            <button type="button" class="btn btn-sm btn-outline-success" data-toggle="modal" data-target="#addFolderModal">
                <i class="fas fa-folder-plus"></i> New Folder
            </button>

            <button type="button" class="btn btn-sm btn-outline-primary" data-toggle="modal" data-target="#uploadFileModal">
                <i class="fas fa-upload"></i> Upload File
            </button>
        </div>

        <div class="explorer-content">
            <table class="file-list">
                <thead>
                    <tr>
                        <th style="width: 40%">Name</th>
                        <th style="width: 15%">Date Modified</th>
                        <th style="width: 15%">Type</th>
                        <th style="width: 15%">Size</th>
                        <th style="width: 15%">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (string.IsNullOrEmpty(Model.CurrentCategory))
                    {
                        <!-- Root Level Categories -->
                        @foreach (var category in Model.FolderHierarchy.Keys)
                        {
                            <tr class="folder-item folder-dropdown" data-path="@category">
                                <td class="file-name">
                                    <span class="toggle-icon"><i class="fas fa-chevron-right caret-icon"></i></span>
                                    <i class="fas fa-folder folder-icon file-icon"></i> @category
                                </td>
                                <td>@DateTime.Now.ToString("MM/dd/yyyy h:mm tt")</td>
                                <td>File folder</td>
                                <td>@Model.GetFileCount(category) items</td>
                                <td class="file-actions">
                                    <button class="action-btn" title="Delete" onclick="deleteFolder('@category')">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                            <!-- Category Subfolders -->
                            <tr class="subfolder-container" data-parent="@category">
                                <td colspan="5" class="p-0">
                                    <table class="file-list w-100">
                                        @foreach (var areaFolder in Model.FolderHierarchy[category])
                                        {
                                            <tr class="subfolder-row folder-dropdown" data-path="@areaFolder.Path">
                                                <td class="file-name">
                                                    <span class="toggle-icon"><i class="fas fa-chevron-right caret-icon"></i></span>
                                                    <i class="fas fa-folder folder-icon file-icon"></i> @areaFolder.Name
                                                </td>
                                                <td>@areaFolder.ModifiedDate.ToString("MM/dd/yyyy h:mm tt")</td>
                                                <td>File folder</td>
                                                <td>@areaFolder.ItemCount items</td>
                                                <td class="file-actions">
                                                    <button class="action-btn" title="Delete" onclick="deleteFolder('@areaFolder.Path')">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </td>
                                            </tr>
                                            <!-- Area Subfolders (Courses) -->
                                            @if (areaFolder.SubFolders != null && areaFolder.SubFolders.Any())
                                            {
                                                <tr class="subfolder-container" data-parent="@areaFolder.Path">
                                                    <td colspan="5" class="p-0">
                                                        <table class="file-list w-100">
                                                            @foreach (var courseFolder in areaFolder.SubFolders)
                                                            {
                                                                <tr class="subfolder-row subfolder-row folder-dropdown" data-path="@courseFolder.Path">
                                                                    <td class="file-name">
                                                                        <span class="toggle-icon"><i class="fas fa-chevron-right caret-icon"></i></span>
                                                                        <i class="fas fa-folder folder-icon file-icon"></i> @courseFolder.Name
                                                                    </td>
                                                                    <td>@courseFolder.ModifiedDate.ToString("MM/dd/yyyy h:mm tt")</td>
                                                                    <td>File folder</td>
                                                                    <td>@courseFolder.ItemCount items</td>
                                                                    <td class="file-actions">
                                                                        <button class="action-btn" title="Delete" onclick="deleteFolder('@courseFolder.Path')">
                                                                            <i class="fas fa-trash"></i>
                                                                        </button>
                                                                    </td>
                                                                </tr>
                                                                <!-- Course Subfolders (Years) -->
                                                                @if (courseFolder.SubFolders != null && courseFolder.SubFolders.Any())
                                                                {
                                                                    <tr class="subfolder-container" data-parent="@courseFolder.Path">
                                                                        <td colspan="5" class="p-0">
                                                                            <table class="file-list w-100">
                                                                                @foreach (var yearFolder in courseFolder.SubFolders)
                                                                                {
                                                                                    <tr class="subfolder-row subfolder-row subfolder-row" data-path="@yearFolder.Path">
                                                                                        <td class="file-name">
                                                                                            <span class="file-spacer"></span>
                                                                                            <i class="fas fa-folder folder-icon file-icon"></i> @yearFolder.Name
                                                                                        </td>
                                                                                        <td>@yearFolder.ModifiedDate.ToString("MM/dd/yyyy h:mm tt")</td>
                                                                                        <td>File folder</td>
                                                                                        <td>@yearFolder.ItemCount items</td>
                                                                                        <td class="file-actions">
                                                                                            <button class="action-btn" title="Delete" onclick="deleteFolder('@yearFolder.Path')">
                                                                                                <i class="fas fa-trash"></i>
                                                                                            </button>
                                                                                        </td>
                                                                                    </tr>
                                                                                }
                                                                                <!-- Add Year button at the course level -->
                                                                                <tr class="add-year-row">
                                                                                    <td class="file-name add-folder-btn" onclick="showAddYearModal('@courseFolder.Path', '@category', '@areaFolder.Path')">
                                                                                        <i class="fas fa-folder-plus file-icon"></i> Add Year
                                                                                    </td>
                                                                                    <td>@DateTime.Now.ToString("MM/dd/yyyy h:mm tt")</td>
                                                                                    <td>Action</td>
                                                                                    <td></td>
                                                                                    <td></td>
                                                                                </tr>
                                                                            </table>
                                                                        </td>
                                                                    </tr>
                                                                }
                                                            }
                                                            <!-- Add Course button at the area level -->
                                                            <tr class="add-course-row">
                                                                <td class="file-name add-folder-btn" onclick="showAddCourseModal('@areaFolder.Path', '@category')">
                                                                    <i class="fas fa-folder-plus file-icon"></i> Add Course
                                                                </td>
                                                                <td>@DateTime.Now.ToString("MM/dd/yyyy h:mm tt")</td>
                                                                <td>Action</td>
                                                                <td></td>
                                                                <td></td>
                                                            </tr>
                                                        </table>
                                                    </td>
                                                </tr>
                                            }
                                        }

                                        <!-- Add Area button at the category level -->
                                        <tr class="add-area-row">
                                            <td class="file-name add-folder-btn" onclick="showAddAreaModal('@category')">
                                                <i class="fas fa-folder-plus file-ico   n"></i> Add Area
                                            </td>
                                            <td>@DateTime.Now.ToString("MM/dd/yyyy h:mm tt")</td>
                                            <td>Action</td>
                                            <td></td>
                                            <td></td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                        }

                        <tr class="add-category-row">
                            <td class="file-name add-folder-btn" data-toggle="modal" data-target="#addCategoryModal">
                                <i class="fas fa-folder-plus file-icon"></i> Add Category
                            </td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                        </tr>

                    }
                    else
                    {
                        <!-- If inside a category or folder, show folders and files -->
                        @foreach (var folder in Model.CurrentFolders)
                        {
                            <tr class="folder-item" data-path="@folder.Path">
                                <td class="file-name">
                                    <span class="toggle-icon"><i class="fas fa-chevron-right"></i></span>
                                    <i class="fas fa-folder folder-icon file-icon"></i> @folder.Name
                                </td>
                                <td>@folder.ModifiedDate.ToString("MM/dd/yyyy h:mm tt")</td>
                                <td>File folder</td>
                                <td>@folder.ItemCount items</td>
                                <td class="file-actions">
                                    <button class="action-btn" title="Delete" onclick="deleteFolder('@folder.Path')">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        }



                        @foreach (var file in Model.CurrentFiles)
                        {
                            <tr class="file-item">
                                <td class="file-name">
                                    <span class="file-spacer"></span>
                                    <i class="@file.GetFileIcon() file-icon"></i> @file.Name
                                </td>
                                <td>@file.DateModified.ToString("MM/dd/yyyy h:mm tt")</td>
                                <td>@file.Type</td>
                                <td>@file.Size</td>
                                <td class="file-actions">
                                    <a href="@file.DownloadUrl" class="action-btn" title="Download">
                                        <i class="fas fa-download"></i>
                                    </a>
                                    <button class="action-btn" title="Delete" onclick="deleteFile('@file.Id')">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        <!-- Modal for adding a new category folder -->
        <div class="modal fade" id="addCategoryModal" tabindex="-1" role="dialog" aria-labelledby="addCategoryModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addCategoryModalLabel">Add New Category</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <form id="addCategoryForm" method="post" asp-page-handler="AddCategory">
                        <div class="modal-body">
                            <div class="form-group">
                                <label for="categoryName">Category Name</label>
                                <input type="text" class="form-control" id="categoryName" name="categoryName" required
                                       minlength="2" maxlength="50" pattern="[a-zA-Z0-9\s\-_]+"
                                       title="Category name can only contain letters, numbers, spaces, hyphens, and underscores">
                                <div class="invalid-feedback" id="categoryNameFeedback"></div>
                                <small class="form-text text-muted">
                                    Category name must be 2-50 characters and contain only letters, numbers, spaces, hyphens, and underscores.
                                </small>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary" id="createCategoryBtn">
                                <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true" id="categorySpinner"></span>
                                Create Category
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Modal for adding a new Area folder -->
        <div class="modal fade" id="addAreaModal" tabindex="-1" role="dialog" aria-labelledby="addAreaModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addAreaModalLabel">Add New Area</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <form id="addAreaForm" method="post" asp-page-handler="AddArea">
                        <div class="modal-body">
                            <div class="form-group">
                                <label for="areaName">Area Name</label>
                                <input type="text" class="form-control" id="areaName" name="areaName" required
                                       minlength="2" maxlength="50" pattern="[a-zA-Z0-9\s\-_]+"
                                       title="Area name can only contain letters, numbers, spaces, hyphens, and underscores">
                                <small class="form-text text-muted">
                                    Area name must be 2-50 characters and contain only letters, numbers, spaces, hyphens, and underscores.
                                </small>
                            </div>
                            <input type="hidden" name="categoryId" id="categoryIdForArea">
                            <input type="hidden" name="categoryName" id="categoryNameForArea">
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary" id="createAreaBtn">
                                <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true" id="areaSpinner"></span>
                                Create Area
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Modal for adding a new Course folder -->
        <div class="modal fade" id="addCourseModal" tabindex="-1" role="dialog" aria-labelledby="addCourseModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addCourseModalLabel">Add New Course</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <form id="addCourseForm" method="post" asp-page-handler="AddCourse">
                        <div class="modal-body">
                            <div class="form-group">
                                <label for="courseName">Course Name</label>
                                <input type="text" class="form-control" id="courseName" name="courseName" required
                                       minlength="2" maxlength="50" pattern="[a-zA-Z0-9\s\-_]+"
                                       title="Course name can only contain letters, numbers, spaces, hyphens, and underscores">
                                <small class="form-text text-muted">
                                    Course name must be 2-50 characters and contain only letters, numbers, spaces, hyphens, and underscores.
                                </small>
                            </div>
                            <input type="hidden" name="areaId" id="areaIdForCourse">
                            <input type="hidden" name="areaPath" id="areaPathForCourse">
                            <input type="hidden" name="categoryName" id="categoryNameForCourse">
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary" id="createCourseBtn">
                                <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true" id="courseSpinner"></span>
                                Create Course
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Modal for adding a new Year folder -->
        <div class="modal fade" id="addYearModal" tabindex="-1" role="dialog" aria-labelledby="addYearModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addYearModalLabel">Add New Year</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <form id="addYearForm" method="post" asp-page-handler="AddYear">
                        <div class="modal-body">
                            <div class="form-group">
                                <label for="yearName">Year</label>
                                <input type="number" class="form-control" id="yearName" name="year" required
                                       min="2000" max="2100" step="1"
                                       title="Please enter a valid year between 2000 and 2100">
                                <small class="form-text text-muted">
                                    Please enter a valid year between 2000 and 2100.
                                </small>
                            </div>
                            <input type="hidden" name="coursePath" id="coursePathForYear">
                            <input type="hidden" name="categoryName" id="categoryNameForYear">
                            <input type="hidden" name="areaPath" id="areaPathForYear">
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary" id="createYearBtn">
                                <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true" id="yearSpinner"></span>
                                Create Year
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

    </div>
</div>

<!-- Toast notifications container -->
<div class="position-fixed bottom-0 right-0 p-3" style="z-index: 5; right: 0; bottom: 0;">
    <div id="successToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true" data-delay="5000">
        <div class="toast-header bg-success text-white">
            <strong class="mr-auto">Success</strong>
            <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="toast-body" id="successToastBody">
            Category created successfully!
        </div>
    </div>

    <div id="errorToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true" data-delay="5000">
        <div class="toast-header bg-danger text-white">
            <strong class="mr-auto">Error</strong>
            <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="toast-body" id="errorToastBody">
            An error occurred.
        </div>
    </div>
</div>

<!-- Modal for adding a new folder -->
<div class="modal fade" id="addFolderModal" tabindex="-1" role="dialog" aria-labelledby="addFolderModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addFolderModalLabel">Add New Folder</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form method="post" asp-page-handler="AddFolder">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="folderName">Folder Name</label>
                        <input type="text" class="form-control" id="folderName" name="folderName" required>
                        <input type="hidden" name="category" value="@Model.CurrentCategory">
                        <input type="hidden" name="currentPath" value="@Model.CurrentPath">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Create Folder</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal for uploading file -->
<div class="modal fade" id="uploadFileModal" tabindex="-1" role="dialog" aria-labelledby="uploadFileModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="uploadFileModalLabel">Upload File</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form method="post" enctype="multipart/form-data" asp-page-handler="UploadFile">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="fileUpload">Select File</label>
                        <input type="file" class="form-control-file" id="fileUpload" name="file" required>
                        <input type="hidden" name="category" value="@Model.CurrentCategory">
                        <input type="hidden" name="currentPath" value="@Model.CurrentPath">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Upload</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Add this to your AdminFileFolder.cshtml file, just before the -->
<!-- Modal for adding a new category folder -->
<div class="modal fade" id="addCategoryModal" tabindex="-1" role="dialog" aria-labelledby="addCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addCategoryModalLabel">Add New Category</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="addCategoryForm" method="post" asp-page-handler="AddCategory">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="categoryName">Category Name</label>
                        <input type="text" class="form-control" id="categoryName" name="categoryName" required
                               minlength="2" maxlength="50" pattern="[a-zA-Z0-9\s\-_]+"
                               title="Category name can only contain letters, numbers, spaces, hyphens, and underscores">
                        <div class="invalid-feedback" id="categoryNameFeedback"></div>
                        <small class="form-text text-muted">
                            Category name must be 2-50 characters and contain only letters, numbers, spaces, hyphens, and underscores.
                        </small>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary" id="createCategoryBtn">
                        <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true" id="categorySpinner"></span>
                        Create Category
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
                // Pass TempData messages to JavaScript
        var tempDataSuccessMessage = '@Html.Raw(Json.Serialize(TempData["SuccessMessage"]?.ToString()))';
        var tempDataErrorMessage = '@Html.Raw(Json.Serialize(TempData["ErrorMessage"]?.ToString()))';

        $(document).ready(function() {
            // Refresh button handler
            $('#refreshBtn').click(function() {
                window.location.reload();
            });

            // Initialize: Hide all subfolder containers initially
            $('.subfolder-container').hide();

            // Use event delegation for all dynamic elements
            $(document).on('click', '.file-name', function(e) {
                const folderRow = $(this).closest('.folder-item, .subfolder-row');

                // Special handling for Add Category row
                if ($(this).closest('.add-category-row').length) {
                    e.preventDefault();
                    e.stopPropagation();

                    // Try to use Bootstrap's modal if available
                    try {
                        $('#addCategoryModal').modal('show');
                    } catch (error) {
                        // Fallback to manual display if Bootstrap modal is not available
                        $('#addCategoryModal').addClass('show').css({
                            'display': 'block',
                            'background-color': 'rgba(0,0,0,0.5)'
                        });
                        $('body').addClass('modal-open');
                    }
                    return;
                }

                // Regular folder handling
                if (folderRow.hasClass('folder-dropdown')) {
                    // Only if not clicking on the toggle icon itself
                    if ($(e.target).closest('.toggle-icon').length === 0) {
                        e.preventDefault();
                        e.stopPropagation();

                        // Toggle the icon
                        const toggleIcon = folderRow.find('.toggle-icon .caret-icon');
                        toggleIcon.toggleClass('open');

                        // Toggle subfolder visibility
                        const folderPath = folderRow.data('path');
                        const subfolderContainer = $(`tr.subfolder-container[data-parent="${folderPath}"]`);
                        subfolderContainer.toggle();
                    }
                } else if (!$(e.target).closest('.toggle-icon').length) {
                    // Navigate to folder if not clicking on the toggle icon
                    const folderPath = folderRow.data('path');
                    navigateToFolder(folderPath);
                }
            });

            // Toggle icon click handler
            $(document).on('click', '.toggle-icon', function(e) {
                e.preventDefault();
                e.stopPropagation();

                // Toggle the icon
                $(this).find('.caret-icon').toggleClass('open');

                // Get the folder path
                const folderRow = $(this).closest('.folder-dropdown');
                const folderPath = folderRow.data('path');

                // Toggle subfolder visibility
                const subfolderContainer = $(`tr.subfolder-container[data-parent="${folderPath}"]`);
                subfolderContainer.toggle();
            });

            // Modal close handlers
            $(document).on('click', '#addCategoryModal .close, #addCategoryModal button[data-dismiss="modal"]', function() {
                try {
                    $('#addCategoryModal').modal('hide');
                } catch (error) {
                    // Fallback
                    $('#addCategoryModal').removeClass('show').css('display', 'none');
                    $('body').removeClass('modal-open');
                }
            });

            // Category form submission
            $('#addCategoryForm').on('submit', function() {
                // Show loading spinner
                $('#categorySpinner').removeClass('d-none');
                $('#createCategoryBtn').attr('disabled', true);

                // Let the form submit normally
                return true;
            });

            // Clear the modals when closed
            $('#addFolderModal').on('hidden.bs.modal', function() {
                $(this).find('form').trigger('reset');
            });

            $('#addCategoryModal').on('hidden.bs.modal', function() {
                $('#categoryName').removeClass('is-invalid');
                $('#categoryNameFeedback').text('');
                $('#addCategoryForm')[0].reset();
            });

            // Show toast notifications if TempData contains messages
            if (tempDataSuccessMessage && tempDataSuccessMessage !== 'null') {
                $('#successToastBody').text(tempDataSuccessMessage);
                try {
                    $('#successToast').toast('show');
                } catch (error) {
                    // Fallback
                    $('#successToast').addClass('show').css('display', 'block');
                    setTimeout(function() {
                        $('#successToast').removeClass('show').css('display', 'none');
                    }, 5000);
                }
            }

            if (tempDataErrorMessage && tempDataErrorMessage !== 'null') {
                $('#errorToastBody').text(tempDataErrorMessage);
                try {
                    $('#errorToast').toast('show');
                } catch (error) {
                    // Fallback
                    $('#errorToast').addClass('show').css('display', 'block');
                    setTimeout(function() {
                        $('#errorToast').removeClass('show').css('display', 'none');
                    }, 5000);
                }
            }
        });

                // Function to show the Add Course modal
        function showAddCourseModal(areaPath, categoryName) {
            // Set the values in the hidden fields
            $('#areaPathForCourse').val(areaPath);
            $('#categoryNameForCourse').val(categoryName);

            try {
                $('#addCourseModal').modal('show');
            } catch (error) {
                // Fallback to manual display if Bootstrap modal is not available
                $('#addCourseModal').addClass('show').css({
                    'display': 'block',
                    'background-color': 'rgba(0,0,0,0.5)'
                });
                $('body').addClass('modal-open');
            }
        }
                // Course form submission
        $('#addCourseForm').on('submit', function() {
            // Show loading spinner
            $('#courseSpinner').removeClass('d-none');
            $('#createCourseBtn').attr('disabled', true);

            // Let the form submit normally
            return true;
        });

                // Modal close handlers for Course modal
        $(document).on('click', '#addCourseModal .close, #addCourseModal button[data-dismiss="modal"]', function() {
            try {
                $('#addCourseModal').modal('hide');
            } catch (error) {
                // Fallback
                $('#addCourseModal').removeClass('show').css('display', 'none');
                $('body').removeClass('modal-open');
            }
        });

        // Clear the Course modal when closed
        $('#addCourseModal').on('hidden.bs.modal', function() {
            $('#courseName').removeClass('is-invalid');
            $('#addCourseForm')[0].reset();
        });

                // Function to show the Add Area modal
        function showAddAreaModal(categoryName) {
            // Set the category name in the hidden field
            $('#categoryNameForArea').val(categoryName);

            try {
                $('#addAreaModal').modal('show');
            } catch (error) {
                // Fallback to manual display if Bootstrap modal is not available
                $('#addAreaModal').addClass('show').css({
                    'display': 'block',
                    'background-color': 'rgba(0,0,0,0.5)'
                });
                $('body').addClass('modal-open');
            }
        }

                // Area form submission
        $('#addAreaForm').on('submit', function() {
            // Show loading spinner
            $('#areaSpinner').removeClass('d-none');
            $('#createAreaBtn').attr('disabled', true);

            // Let the form submit normally
            return true;
        });

        // Modal close handlers for Area modal
        $(document).on('click', '#addAreaModal .close, #addAreaModal button[data-dismiss="modal"]', function() {
            try {
                $('#addAreaModal').modal('hide');
            } catch (error) {
                // Fallback
                $('#addAreaModal').removeClass('show').css('display', 'none');
                $('body').removeClass('modal-open');
            }
        });

        // Clear the Area modal when closed
        $('#addAreaModal').on('hidden.bs.modal', function() {
            $('#areaName').removeClass('is-invalid');
            $('#addAreaForm')[0].reset();
        });

                // Function to show the Add Year modal
        function showAddYearModal(coursePath, categoryName, areaPath) {
            // Set the values in the hidden fields
            $('#coursePathForYear').val(coursePath);
            $('#categoryNameForYear').val(categoryName);
            $('#areaPathForYear').val(areaPath);

            try {
                $('#addYearModal').modal('show');
            } catch (error) {
                // Fallback to manual display if Bootstrap modal is not available
                $('#addYearModal').addClass('show').css({
                    'display': 'block',
                    'background-color': 'rgba(0,0,0,0.5)'
                });
                $('body').addClass('modal-open');
            }
        }

        // Year form submission
        $('#addYearForm').on('submit', function() {
            // Show loading spinner
            $('#yearSpinner').removeClass('d-none');
            $('#createYearBtn').attr('disabled', true);

            // Let the form submit normally
            return true;
        });

        // Modal close handlers for Year modal
        $(document).on('click', '#addYearModal .close, #addYearModal button[data-dismiss="modal"]', function() {
            try {
                $('#addYearModal').modal('hide');
            } catch (error) {
                // Fallback
                $('#addYearModal').removeClass('show').css('display', 'none');
                $('body').removeClass('modal-open');
            }
        });

        // Clear the Year modal when closed
        $('#addYearModal').on('hidden.bs.modal', function() {
            $('#yearName').removeClass('is-invalid');
            $('#addYearForm')[0].reset();
        });

        // Function to delete a file
        function deleteFile(fileId) {
            if (confirm('Are you sure you want to delete this file?')) {
                fetch('/AdminPage/AdminFileFolder?handler=DeleteFile', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: `fileId=${fileId}`
                }).then(response => {
                    if (response.ok) {
                        window.location.reload();
                    } else {
                        alert('Error deleting file');
                    }
                });
            }
        }

        // Function to delete a folder
        function deleteFolder(folderPath) {
            if (confirm('Are you sure you want to delete this folder and all its contents?')) {
                fetch('/AdminPage/AdminFileFolder?handler=DeleteFolder', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: `folderPath=${encodeURIComponent(folderPath)}`
                }).then(response => {
                    if (response.ok) {
                        window.location.reload();
                    } else {
                        alert('Error deleting folder');
                    }
                });
            }
        }

        // Fix for navigateToFolder function
        function navigateToFolder(folderPath) {
            if (!folderPath) {
                console.error('Folder path is undefined');
                return;
            }

            const pathParts = folderPath.split('/');
            if (pathParts.length > 0) {
                const category = pathParts[0];
                window.location.href = `/AdminPage/AdminFileFolder?category=${encodeURIComponent(category)}&folderPath=${encodeURIComponent(folderPath)}`;
            } else {
                console.error('Invalid folder path format');
            }
        }
    </script>
}