@page
@model Document_Management_System.Pages.AdminPage.AdminDashboardModel
@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = "_LayoutDashboard";
}

<style>
    .user-info-card {
        background: linear-gradient(135deg, #4a6cf7 0%, #2541b2 100%);
        border-radius: 10px;
        padding: 20px;
        color: white;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        margin-bottom: 30px;
        overflow: hidden;
        position: relative;
    }

        .user-info-card::before {
            content: '';
            position: absolute;
            top: -50px;
            right: -50px;
            width: 150px;
            height: 150px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
        }

    .user-info-header {
        display: flex;
        align-items: center;
        margin-bottom: 15px;
    }

    .user-avatar {
        width: 50px;
        height: 50px;
        background: rgba(255, 255, 255, 0.2);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 15px;
        font-size: 20px;
    }

    .user-meta h3 {
        margin: 0;
        font-weight: 600;
        font-size: 1.2rem;
    }

    .username {
        font-weight: 700;
    }

    .user-badge {
        display: inline-block;
        background: rgba(255, 255, 255, 0.2);
        padding: 3px 10px;
        border-radius: 20px;
        font-size: 0.8rem;
        margin-top: 5px;
        font-weight: 500;
    }

    .user-info-footer {
        border-top: 1px solid rgba(255, 255, 255, 0.2);
        padding-top: 15px;
    }

    .user-stats {
        display: flex;
        gap: 20px;
    }

    .stat-item {
        display: flex;
        align-items: center;
        gap: 8px;
        font-size: 0.9rem;
        opacity: 0.9;
    }

        .stat-item i {
            font-size: 0.8rem;
        }

    .dashboard-container {
        padding: 20px;
    }

    .stats-cards {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .stat-card {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 20px;
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .stat-info h3 {
        font-size: 1rem;
        color: #6c757d;
        margin-bottom: 5px;
    }

    .stat-value {
        font-size: 1.8rem;
        font-weight: 700;
        color: #2e59d9;
        margin-bottom: 5px;
    }

    .stat-link {
        font-size: 0.8rem;
        color: #4e73df;
        text-decoration: none;
    }

    .stat-icon {
        font-size: 2.5rem;
        color: #dddfeb;
    }

    .charts-section {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .chart-card {
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .card-header {
        padding: 15px 20px;
        border-bottom: 1px solid #eee;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .card-body {
        padding: 20px;
    }

    .document-distribution {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .distribution-item {
        display: flex;
        flex-direction: column;
        gap: 5px;
    }

    .distribution-label {
        font-size: 14px;
        color: #555;
    }

    .progress {
        height: 25px;
        background: #f0f0f0;
        border-radius: 4px;
        overflow: hidden;
    }

    .progress-bar {
        height: 100%;
        background: #4e73df;
        color: white;
        display: flex;
        align-items: center;
        padding-left: 10px;
        font-size: 12px;
        font-weight: 500;
    }

    .chart-actions {
        display: flex;
        gap: 10px;
        margin-top: 20px;
    }

    .priority-tasks {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .task-item {
        display: flex;
        gap: 15px;
        padding: 10px 0;
        border-bottom: 1px solid #f0f0f0;
    }

    .task-number {
        font-weight: 600;
        color: #6c757d;
    }

    .task-content {
        flex: 1;
    }

    .task-title {
        font-weight: 600;
        margin-bottom: 3px;
    }

    .task-meta {
        font-size: 0.8rem;
        color: #6c757d;
    }

    .activity-list {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .activity-item {
        display: flex;
        gap: 15px;
        padding: 10px 0;
        border-bottom: 1px solid #f0f0f0;
    }

    .activity-time {
        font-weight: 600;
        color: #6c757d;
        min-width: 50px;
    }

    .view-all {
        margin-top: 15px;
    }

    .pie-chart-container {
        width: 100px;
        height: 100px;
        margin: 10px auto;
    }
</style>

<div class="dashboard-content">
    <!-- User Info Card -->
    <div class="user-info-card">
        <div class="user-info-header">
            <div class="user-avatar">
                <i class="fas fa-user-shield"></i>
            </div>
            <div class="user-meta">
                <h3>Welcome back, <span class="username">@User.Identity.Name</span></h3>
                <div class="user-badge">@Model.UserRole</div>
            </div>
        </div>
        <div class="user-info-footer">
            <div class="user-stats">
                <div class="stat-item">
                    <i class="fas fa-calendar-alt"></i>
                    <span>@DateTime.Now.ToString("dddd, MMMM dd")</span>
                </div>
                <div class="stat-item">
                    <i class="fas fa-clock"></i>
                    <span>@DateTime.Now.ToString("h:mm tt")</span>
                </div>
            </div>
        </div>
    </div>

    <!-- Stats Cards -->
    <div class="stats-cards">
        <div class="stat-card">
            <div class="stat-info">
                <h3>Total Documents</h3>
                <div class="stat-value">100</div>
                <a href="#" class="stat-link">View All</a>
            </div>
            <div class="stat-icon">
                <i class="fas fa-file-alt"></i>
            </div>
        </div>

        <div class="stat-card">
            <div class="stat-info">
                <h3>Active Users</h3>
                <div class="stat-value">@Model.ActiveUsersCount</div>
                <a asp-page="/AdminPage/AdminUserTable" class="stat-link">Manage</a>
            </div>
            <div class="stat-icon">
                <i class="fas fa-users"></i>
            </div>
        </div>

        <div class="stat-card">
            <div class="stat-info">
                <h3>Folder Categories</h3>
                <div class="stat-value">@Model.CategoriesCount</div>
                <a asp-page="/AdminPage/AdminFileFolder" class="stat-link">Manage</a>
            </div>
            <div class="stat-icon">
                <i class="fas fa-tags"></i>
            </div>
        </div>

        <div class="stat-card">
            <div class="stat-info">
                <h3>Avg. Completion</h3>
                <div class="pie-chart-container">
                    <canvas id="completionPieChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Charts Section -->
    <div class="charts-section">
        <!-- Areas by Category Chart -->
        </div>

        <!-- Document Type Distribution Chart -->
        <div class="chart-card">
            <div class="card-header">
                <i class="fas fa-chart-pie"></i> Document Type Distribution
            </div>
            <div class="card-body">
                <canvas id="documentTypeChart"></canvas>
            </div>
        </div>
    </div>

    <!-- Bottom Section -->
    <div class="charts-section">
        <!-- User Assign Folders -->
        <div class="chart-card">
            <div class="card-header">
                <i class="fas fa-folder-open"></i> User Assign Folders
            </div>
            <div class="card-body">
                <div class="priority-tasks">
                    @if (Model.FolderAssignmentsCount != null && Model.FolderAssignmentsCount.Any())
                    {
                        var count = 1;
                        foreach (var folder in Model.FolderAssignmentsCount)
                        {
                            <div class="task-item">
                                <div class="task-number">@count.</div>
                                <div class="task-content">
                                    <div class="task-title">@folder.Key</div>
                                    <div class="task-meta">
                                        Assign User in this Folder: @folder.Value
                                    </div>
                                </div>
                            </div>
                            count++;
                        }
                    }
                    else
                    {
                        <div>No new assignments found.</div>
                    }
                </div>
                <div class="view-all">
                    <a asp-page="/AdminPage/AdminAssignFolder" class="btn btn-outline-secondary btn-block">Assign New User</a>
                </div>
            </div>
        </div>

        <!-- Recent Activity -->
        <div class="chart-card">
            <div class="card-header">
                <i class="fas fa-history"></i> Recent Activity
            </div>
            <div class="card-body">
                <div class="activity-list">
                    <div class="activity-item">
                        <div class="activity-time">10:32</div>
                        <div class="activity-content">Jane approved "Thesis_Final"</div>
                    </div>
                    <div class="activity-item">
                        <div class="activity-time">09:15</div>
                        <div class="activity-content">Mark uploaded "ALCU_Report"</div>
                    </div>
                    <div class="activity-item">
                        <div class="activity-time">08:50</div>
                        <div class="activity-content">New user "Lisa" registered</div>
                    </div>
                    <div class="activity-item">
                        <div class="activity-time">Yesterday</div>
                        <div class="activity-content">Storage limit at 85%</div>
                    </div>
                </div>
                <div class="view-all">
                    <a href="#" class="btn btn-outline-secondary btn-block">View Full Log</a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Completion Pie Chart
            const pieCtx = document.getElementById('completionPieChart').getContext('2d');
            new Chart(pieCtx, {
                type: 'doughnut',
                data: {
                    labels: ['Completed', 'Remaining'],
                    datasets: [{
                        data: [75, 25],
                        backgroundColor: ['#4e73df', '#e6e6e6'],
                        borderWidth: 0
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    cutout: '70%',
                    plugins: {
                        legend: { display: false },
                        tooltip: { enabled: false }
                    }
                }
            });

            // Document Type Chart
            const docCtx = document.getElementById('documentTypeChart').getContext('2d');
            new Chart(docCtx, {
                type: 'pie',
                data: {
                    labels: Object.keys(@Json.Serialize(Model.FolderAssignmentsCount)),
                    datasets: [{
                        data: Object.values(@Json.Serialize(Model.FolderAssignmentsCount)),
                        backgroundColor: [
                            '#4e73df',
                            '#1cc88a',
                            '#36b9cc',
                            '#f6c23e',
                            '#e74a3b',
                            '#858796'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'right'
                        }
                    }
                }
            });

            // Refresh button functionality
            document.getElementById('refreshBtn')?.addEventListener('click', function() {
                location.reload();
            });
        });
    </script>
}