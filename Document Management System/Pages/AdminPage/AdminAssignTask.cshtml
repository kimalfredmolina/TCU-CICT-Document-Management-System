@page
@model Document_Management_System.Pages.AdminPage.AdminAssignTaskModel
@{
    ViewData["Title"] = "Admin Assign Task";
    Layout = "_LayoutDashboard";
}
<!-- Bootstrap CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<!-- Font Awesome Icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<!-- Bootstrap Table CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-table@1.24.1/dist/bootstrap-table.min.css">
<!-- Bootstrap Datepicker CSS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css">

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-12">
            <h2>Assign Task</h2>
            <p class="text-muted">Assign tasks to users with folder access</p>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Task Assignment</h6>
        </div>
        <div class="card-body">
            <form id="assignTaskForm" method="post">
                <div class="form-group row mb-3">
                    <label for="categorySelect" class="col-sm-2 col-form-label">Select Folder</label>
                    <div class="col-sm-10">
                        <select class="form-control" id="categorySelect" asp-for="Input.CategoryId" required>
                            <option value="">-- Select a folder --</option>
                            @foreach (var category in Model.Categories)
                            {
                                <option value="@category.CategoryId">@category.Name</option>
                            }
                        </select>
                        <span asp-validation-for="Input.CategoryId" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group row mb-3">
                    <label for="userSelect" class="col-sm-2 col-form-label">Assign To</label>
                    <div class="col-sm-10">
                        <select class="form-control" id="userSelect" asp-for="Input.UserId" required>
                            <option value="">-- Select a user --</option>
                        </select>
                    </div>
                </div>

                <div class="form-group row mb-3">
                    <label for="taskName" class="col-sm-2 col-form-label">Task Name</label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" id="taskName" asp-for="Input.TaskName" required>
                        <span asp-validation-for="Input.TaskName" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group row mb-3">
                    <label for="description" class="col-sm-2 col-form-label">Description</label>
                    <div class="col-sm-10">
                        <textarea class="form-control" id="description" asp-for="Input.Description" rows="3"></textarea>
                        <span asp-validation-for="Input.Description" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group row mb-3">
                    <label for="startDate" class="col-sm-2 col-form-label">Start Date</label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control datepicker" id="startDate" asp-for="Input.StartDate" required>
                        <span asp-validation-for="Input.StartDate" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group row mb-3">
                    <label for="deadline" class="col-sm-2 col-form-label">Deadline</label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control datepicker" id="deadline" asp-for="Input.Deadline" required>
                        <span asp-validation-for="Input.Deadline" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group row mb-3">
                    <label for="status" class="col-sm-2 col-form-label">Status</label>
                    <div class="col-sm-10">
                        <select class="form-control" id="status" asp-for="Input.Status" required>
                            <option value="Pending">Pending</option>
                            <option value="In Progress">In Progress</option>
                            <option value="Completed">Completed</option>
                            <option value="Overdue">Overdue</option>
                        </select>
                        <span asp-validation-for="Input.Status" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-sm-10 offset-sm-2">
                        <button type="submit" class="btn btn-primary">Assign Task</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="card mt-4">
    <div class="card-header">
        <h5>Current Task Assignments</h5>
    </div>
    <div class="card-body">
        <table class="table table-bordered table-hover">
            <thead>
                <tr>
                    <th>Folder Name</th>
                    <th>Task Name</th>
                    <th>Assigned To</th>
                    <th>Start Date</th>
                    <th>Deadline</th>
                    <th>Status</th>
                    <th>Created Date</th>
                    <th>Created By</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.TaskAssignments != null && Model.TaskAssignments.Any())
                {
                    foreach (var task in Model.TaskAssignments)
                    {
                        <tr>
                            <td>@task.Category?.Name</td>
                            <td>@task.TaskName</td>
                            <td>@task.User?.UserName</td>
                            <td>@task.StartDate.ToLocalTime().ToString("yyyy-MM-dd")</td>
                            <td class="@(task.Deadline < DateTime.UtcNow && task.Status != "Completed" ? "text-danger fw-bold" : "")">
                                @task.Deadline.ToLocalTime().ToString("yyyy-MM-dd")
                            </td>
                            <td>
                                <span class="badge
                                    @(task.Status == "Completed" ? "bg-success" :
                                      task.Status == "In Progress" ? "bg-primary" :
                                      task.Status == "Overdue" ? "bg-danger" : "bg-secondary")">
                                    @task.Status
                                </span>
                            </td>
                            <td>@task.CreatedDate.ToLocalTime().ToString("yyyy-MM-dd")</td>
                            <td>@task.CreatedByUser?.UserName</td>
                            <td>
                                <a asp-page="/AdminPage/EditTask" asp-route-id="@task.Id" class="action-btn edit-btn">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <i class="fas fa-trash action-btn delete-btn" data-taskid="@task.Id" data-bs-toggle="modal" data-bs-target="#deleteModal"></i>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="9">No task assignments found.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this task assignment? This action cannot be undone.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>

    <script>
        $(document).ready(function() {
            // Initialize date pickers
            $('.datepicker').datepicker({
                format: 'yyyy-mm-dd',
                autoclose: true,
                todayHighlight: true
            });

            // Filter users based on selected folder
            $('#categorySelect').change(function() {
                var categoryId = $(this).val();
                if (categoryId) {
                    $.ajax({
                        url: '?handler=UsersWithAccess',
                        type: 'GET',
                        data: { categoryId: categoryId },
                        headers: {
                            "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function(data) {
                            $('#userSelect').empty();
                            $('#userSelect').append('<option value="">-- Select a user --</option>');
                            $.each(data, function(index, user) {
                                $('#userSelect').append('<option value="' + user.id + '">' + user.userName + ' (' + user.email + ')</option>');
                            });
                        },
                        error: function(xhr) {
                            console.error('Failed to load users', xhr.responseText);
                            $('#userSelect').empty();
                            $('#userSelect').append('<option value="">-- Select a user --</option>');
                        }
                    });
                } else {
                    $('#userSelect').empty();
                    $('#userSelect').append('<option value="">-- Select a user --</option>');
                }
            });

            let currentTaskId = null;

            $(document).on('click', '.delete-btn', function() {
                currentTaskId = $(this).data('taskid');
            });

            $('#confirmDelete').click(function() {
                if (!currentTaskId) return;

                const row = $(`tr:has(.delete-btn[data-taskid="${currentTaskId}"])`);

                $.ajax({
                    url: '?handler=DeleteTask',
                    type: 'POST',
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val(),
                        "Content-Type": "application/json"
                    },
                    data: JSON.stringify({ taskId: currentTaskId }),
                    success: function(response) {
                        if (response.success) {
                            $('#deleteModal').modal('hide');
                            row.remove();

                            // Show success message
                            alert('Task deleted successfully');

                            // If no more rows, show empty message
                            if ($('table tbody tr').not(':has(td[colspan])').length === 0) {
                                $('table tbody').html(
                                    '<tr><td colspan="9">No task assignments found.</td></tr>'
                                );
                            }
                        } else {
                            $('#deleteModal').modal('hide');
                            alert(response.message || 'Failed to delete task');
                        }
                    },
                    error: function(xhr) {
                        $('#deleteModal').modal('hide');
                        console.error('Error:', xhr.responseText);
                        alert('Error: ' + (xhr.responseJSON?.message || 'Failed to delete task'));
                    }
                });
            });
        });
    </script>
}