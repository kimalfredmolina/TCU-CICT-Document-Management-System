@page
@model Document_Management_System.Pages.AdminPage.AdminFilesAddModel
@{
    ViewData["Title"] = "Admin Add Files";
    Layout = "_LayoutDashboard";
}
<!-- PDF.js for PDF rendering -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.12.313/pdf.min.js"></script>
<style>
    .form-control {
        display: block;
        width: 100%;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: #212529;
        background-color: #fff;
        background-clip: padding-box;
        border: 2px solid #ced4da;
        border-radius: 0.25rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

        .form-control:focus {
            color: #212529;
            background-color: #fff;
            border-color: #86b7fe;
            outline: 0;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        }

    .form-label {
        margin-bottom: 0.5rem;
        font-weight: 500;
        display: inline-block;
    }

    .mb-3 {
        margin-bottom: 1rem !important;
    }

    .btn {
        display: inline-block;
        font-weight: 400;
        line-height: 1.5;
        color: #212529;
        text-align: center;
        text-decoration: none;
        vertical-align: middle;
        cursor: pointer;
        -webkit-user-select: none;
        -moz-user-select: none;
        user-select: none;
        background-color: transparent;
        border: 1px solid transparent;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        border-radius: 0.25rem;
        transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

    .btn-primary {
        color: #fff;
        background-color: #0d6efd;
        border-color: #0d6efd;
    }

        .btn-primary:hover {
            color: #fff;
            background-color: #0b5ed7;
            border-color: #0a58ca;
        }

    .text-muted {
        color: #6c757d !important;
    }

    .text-info {
        color: #0dcaf0 !important;
    }

    .text-danger {
        color: #dc3545 !important;
    }

    .m-0 {
        margin: 0 !important;
    }


    #previewSection {
        border: 1px solid #ccc;
        height: 300px;
        display: flex;
        flex-direction: column;
        margin-top: 20px;
        transition: height 0.3s ease;
    }

        #previewSection.has-preview {
            height: 650px;
        }

    #previewHeader {
        padding: 10px;
        border-bottom: 1px solid #ccc;
        background-color: #f8f9fa;
        flex-shrink: 0;
    }

    #previewContent {
        flex-grow: 1;
        overflow-y: auto;
        padding: 10px;
    }

    .pdf-preview-container {
        width: 100%;
    }

    .pdf-page {
        margin-bottom: 15px;
        border: 1px solid #ddd;
    }

    .page-label {
        font-size: 0.8rem;
        color: #666;
        margin-bottom: 5px;
    }

    .img-preview {
        max-width: 100%;
        max-height: 100%;
        display: block;
        margin: 0 auto;
    }

    .doc-preview {
        white-space: pre-wrap;
        font-family: Arial, sans-serif;
    }

    .file-upload-section {
        background-color: #f8f9fa;
        padding: 20px;
        border-radius: 5px;
        border: 1px solid #ddd;
    }

    .form-select {
        display: block;
        width: 100%;
        padding: 0.375rem 2.25rem 0.375rem 0.75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: #212529;
        background-color: #fff;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");
        background-repeat: no-repeat;
        background-position: right 0.75rem center;
        background-size: 16px 12px;
        border: 2px solid #ced4da;
        border-radius: 0.25rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        appearance: none;
    }

        .form-select:focus {
            border-color: #86b7fe;
            outline: 0;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        }

        .form-select option {
            padding: 0.5rem 1rem;
        }

            .form-select option[value="thesis"] {
                background-color: #e6f7ff;
            }

            .form-select option[value="alcu"] {
                background-color: #fff7e6;
            }

            .form-select option[value="memo"] {
                background-color: #f9e6ff;
            }
</style>

<div class="file-upload-section">
    <h4>Document Upload</h4>
    <form id="documentForm">
        <div class="mb-3">
            <label for="fileName" class="form-label">File Name</label>
            <input type="text" class="form-control" id="fileName" placeholder="Enter document name">
        </div>
        <div class="mb-3">
            <label for="categories" class="form-label">Categories</label>
            <select class="form-select" id="categories" name="Categories">
                <option selected disabled>Select category</option>
                <option value="thesis">Thesis</option>
                <option value="alcu">ALCU</option>
                <option value="memo">Memo</option>
            </select>
        </div>
        <div class="mb-3">
            <label for="contentType" class="form-label">Content Type</label>
            <input type="text" class="form-control" id="contentType" placeholder="Enter content type">
        </div>
        <div class="mb-3">
            <label for="uploadFile" class="form-label">Upload Document (PNG/PDF/DOC/DOCX)</label>
            <input type="file" class="form-control" id="uploadFile" accept=".doc,.docx,.pdf,.png">
        </div>
        <button type="button" class="btn btn-primary" id="saveBtn">Save Document</button>
    </form>
</div>

<!-- Preview Section -->
<div id="previewSection">
    <div id="previewHeader">
        <h5 class="m-0">Document Preview:</h5>
    </div>
    <div id="previewContent">
        <p class="text-muted">No document selected for preview</p>
    </div>
</div>

<!-- Scripts -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/mammoth/1.4.0/mammoth.browser.min.js"></script>

<script>
    pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.12.313/pdf.worker.min.js';

    $(document).ready(function() {
        $('#uploadFile').change(function(e) {
            const file = e.target.files[0];
            if (!file) {
                $('#previewSection').removeClass('has-preview');
                $('#previewContent').html('<p class="text-muted">No document selected for preview</p>');
                return;
            }

            const previewContent = $('#previewContent');
            previewContent.empty();
            $('#previewSection').addClass('has-preview');

            previewContent.append($('<p>').addClass('text-info').text('Loading preview...'));

            if (file.type === 'application/pdf' || file.name.endsWith('.pdf')) {
                renderPdfPreview(file, previewContent);
            } else if (file.type === 'image/png' || file.name.endsWith('.png')) {
                renderImagePreview(file, previewContent);
            } else if (file.type === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' ||
                       file.name.endsWith('.docx') ||
                       file.name.endsWith('.doc')) {
                renderDocxPreview(file, previewContent);
            } else {
                previewContent.empty();
                previewContent.append($('<p>').addClass('text-danger').text('Unsupported file format for preview'));
                $('#previewSection').removeClass('has-preview');
            }
        });

        $('#saveBtn').click(function() {
            alert('Document saved!');
        });
    });

    function renderPdfPreview(file, container) {
        container.empty();
        const pdfContainer = $('<div>').addClass('pdf-preview-container');
        container.append(pdfContainer);

        const fileReader = new FileReader();
        fileReader.onload = function() {
            const typedArray = new Uint8Array(this.result);

            pdfjsLib.getDocument(typedArray).promise.then(function(pdf) {
                pdfContainer.empty();

                const totalPages = pdf.numPages;

                const renderPage = function(pageNumber) {
                    if (pageNumber > totalPages) return;

                    pdf.getPage(pageNumber).then(function(page) {
                        const viewport = page.getViewport({ scale: 1.0 });
                        const canvas = document.createElement('canvas');
                        const context = canvas.getContext('2d');
                        canvas.height = viewport.height;
                        canvas.width = viewport.width;

                        const pageDiv = $('<div>').addClass('pdf-page');
                        pageDiv.append($('<div>').addClass('page-label').text(`Page ${pageNumber}/${totalPages}`));
                        pageDiv.append(canvas);
                        pdfContainer.append(pageDiv);

                        page.render({
                            canvasContext: context,
                            viewport: viewport
                        }).promise.then(function() {
                   
                            renderPage(pageNumber + 1);
                        });
                    });
                };

            
                renderPage(1);
            }).catch(function(error) {
                container.empty();
                container.append($('<p>').addClass('text-danger').text('Error loading PDF: ' + error.message));
                $('#previewSection').removeClass('has-preview');
            });
        };
        fileReader.readAsArrayBuffer(file);
    }

    function renderImagePreview(file, container) {
        container.empty();
        const img = $('<img>').addClass('img-preview');
        container.append(img);

        const fileReader = new FileReader();
        fileReader.onload = function(e) {
            img.attr('src', e.target.result);
        };
        fileReader.readAsDataURL(file);
    }

    function renderDocxPreview(file, container) {
        container.empty();
        container.append($('<p>').addClass('text-info').text('Extracting text from Word document...'));

        const fileReader = new FileReader();
        fileReader.onload = function(e) {
            const arrayBuffer = e.target.result;

            mammoth.extractRawText({ arrayBuffer: arrayBuffer })
                .then(function(result) {
                    container.empty();
                    const content = $('<div>').addClass('doc-preview').text(result.value);
                    container.append(content);
                })
                .catch(function(error) {
                    container.empty();
                    container.append($('<p>').addClass('text-danger').text('Error reading Word document: ' + error.message));
                    $('#previewSection').removeClass('has-preview');
                });
        };
        fileReader.readAsArrayBuffer(file);
    }
</script>